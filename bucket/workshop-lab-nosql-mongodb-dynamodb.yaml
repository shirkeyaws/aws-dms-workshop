AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This CloudFormation template is used during the AWS DMS Workshop and provisions the following
    - a new VPC (TODO)
    - a new EC2 instance running MongoDB (source database)
    - creates an Amazon DynamoDB table (target database)
  
  CAUTION -- You will be billed for the AWS resources used if you create a stack from this template, and are responsible for any/all charges made while running these services in your AWS account
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: 'workshop'
  MongoDBInstanceType:
    Description: MongoDB instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.medium
    ConstraintDescription: must be a valid EC2 instance type.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label: 
          default: Key Pair
        Parameters:
          - KeyName
      - Label:
          default: Source MongoDB Database Configuration
        Parameters:
          - MongoDBInstanceType
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Ref 'AWS::StackName'
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/26
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.64/26
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref RouteTable
  MongoDBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: "workshop-mongo-sg"
      GroupDescription: Security group for MongoDB Instance.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '27017'
          ToPort: '27017'
          CidrIp: 0.0.0.0/0
  MongoDB:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: 'ami-e3c2db84'
      KeyName: !Ref KeyName
      InstanceType: !Ref MongoDBInstanceType 
      SecurityGroupIds:
        - !Ref MongoDBSecurityGroup
      SubnetId: !Ref Subnet1
      AvailabilityZone: !GetAtt 
        - Subnet1
        - AvailabilityZone
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
Outputs:
  StackName:
    Value: !Ref 'AWS::StackName'
  Regionname:
    Value: !Ref 'AWS::Region'
  VPC:
    Description: Newly created VPC for this workshop
    Value: !Ref VPC
  MongoDBServerIP:
    Description: MongoDB Server private IPv4 address for DMS
    Value: !GetAtt MongoDB.PrivateIp